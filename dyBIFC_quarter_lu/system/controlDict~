/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     pimpleFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         0.8;

deltaT          1e-5;

writeControl    timeStep;

writeInterval   5000;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   7;

runTimeModifiable yes;

adjustTimeStep  no;

libs ( "libOpenFOAM.so" "libBifurcationComplex.so" ) ;

functions
{
  fieldAverage1
    {
        type            fieldAverage;
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        enabled         true;
        //cleanRestart    true;
        outputControl   outputTime;
        timeStart       0.1;
        timeEnd         0.8;

        fields
        (
            U
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
            
            p
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
        );
    }

    probes
    {
        // Where to load it from
        functionObjectLibs ( "libsampling.so" );

        type            probes;

        // Name of the directory for probe data
        name            probes;

        // Write at same frequency as fields
        outputControl   timeStep;
        outputInterval  1;

        // Fields to be probed
        fields
        (
            U UMean 
        );

        probeLocations
        (
            (-0.005 0.095 0.003 )        
       );

    }

}


// ************************************************************************* //
