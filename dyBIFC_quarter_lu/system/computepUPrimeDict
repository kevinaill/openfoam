    computepUPrime
    {
        functionObjectLibs ( "libutilityFunctionObjects.so" );
        enabled         true;
        type            coded;
        redirectType    computepUPrime;
        //writeControl    writeTime;
        //outputControl   timeStep;
        //outputInterval  5;

        codeOptions
        #{
            -I$(LIB_SRC)/meshTools/lnInclude
        #};

        code
        #{
	    const volVectorField& UPrime = mesh().lookupObject<volVectorField>("UPrime");
	    const volScalarField& pPrime = mesh().lookupObject<volScalarField>("pPrime");
            static autoPtr<volVectorField> vField;
	    
	    if(!vField.valid())
	    {
//     	        Info << "Computing pUPrime" << nl;

	        vField.set
      		(
         	    new volVectorField
         	    (
            		IOobject
            		(
               		    "pUPrime",
               		    mesh().time().timeName(),
               		    UPrime.mesh(),
               		    IOobject::NO_READ,
               		    IOobject::NO_WRITE
            		),
            		pPrime * UPrime
         	    )
      		);
	    }

	    volVectorField &pUPrime = vField();
	    pUPrime.checkIn();
	    pUPrime = pPrime * UPrime;
       #};
    }
